#!/bin/zsh

# This script provisions an empty OS X install.
#
# This script assumes Xcode (/Applications/Xcode.app or
# /Applications/Xcode-beta.app, the latter takes precedence) and corresponding
# CLT.
#
# This script is nondestructive, that is to say, even if you are not
# provisioning a new machine (say Homebrew is already installed), your machine
# won't explode. You'll get a few error messages at most.

here=$(perl -e 'use File::Basename; use Cwd "abs_path"; print dirname(abs_path(@ARGV[0]));' -- "$0")
provisioner_dir=$here/provision.d

function print_warning { { print -nP $'\n%B%F{yellow}Warning: '; print -n $1; print -P '%f%b'; } >&2 }
function print_milestone { { print -nP $'\n%B%F{green}'; print -n $1; print -P '%f%b'; } >&2 }
function print_progress { { print -nP $'%F{green}'; print -n $1; print -P '%f'; } >&2 }
function print_note { { print -nP $'\n%B'; print -n $1; print -P '%b'; } >&2 }
function print_command { { print -nP '%B%F{blue}==> '; print -n $1; print -P '%f%b'; } >&2 }
function print_error { { print -nP '%F{red}Error: '; print -n $1; print -P '%f'; } >&2 }

errored=false

[[ $OSTYPE == *darwin* ]] || {
    print_error "UNRECGONIZED OSTYPE $OSTYPE. THIS PROVISIONER ONLY WORKS ON OS X."
    exit 1
}

# Our provisioner requires sudo here and there, so we temporarily modify
# /etc/sudoers so that the timestamp does not expire. Remember to revert
# /etc/sudoers after we are done!
print_warning '

We are going to modify /etc/sudoers to avoid having to type admin password to
sudo during provision. The original /etc/sudoers will be backed up to
/etc/sudoers.bak. It will be restored at the end of provision.

If something went wrong and the provision script exited early, please remember
to restore /etc/sudoers.'

print_milestone "Modifying /etc/sudoers..."
print_command "sudo -v"
sudo -v
print_command "sudo cp -f /etc/sudoers /etc/sudoers.bak"
sudo cp -f /etc/sudoers /etc/sudoers.bak || { print_error "Failed to back up /etc/sudoers"; exit 1; }
print_command "sudo /bin/sh -c \"echo '%admin  ALL=(ALL) NOPASSWD:ALL' >>/etc/sudoers\""
sudo /bin/sh -c "echo '%admin  ALL=(ALL) NOPASSWD:ALL' >>/etc/sudoers" || { print_error "Failed to write to /etc/sudoers to enable nopassword sudo"; exit 1; }

# select Xcode
print_milestone "Selecting Xcode..."
xcode_path="$(xcode-select --print-path)"
if [[ $xcode_path =~ /Applications/Xcode(-beta)?.app/Contents/Developer ]]; then
    print_progress "Xcode already selected: $xcode_path"
elif [[ -d /Applications/Xcode-beta.app ]]; then
    print_command "sudo xcode-select --switch /Applications/Xcode-beta.app/Contents/Developer"
    sudo xcode-select --switch /Applications/Xcode-beta.app/Contents/Developer
elif [[ -d /Applications/Xcode.app ]]; then
    print_command "sudo xcode-select --switch /Applications/Xcode.app/Contents/Developer"
    sudo xcode-select --switch /Applications/Xcode.app/Contents/Developer
fi

print_milestone "Inspecting Zsh global init files..."
$provisioner_dir/zshglobalinit || errored=true

print_milestone "Setting up dotfiles..."
$provisioner_dir/dotfiles || errored=true

print_milestone "Provisioning Homebrew..."
$provisioner_dir/brew || errored=true

print_milestone "Provisioning Homebrew Cask..."
$provisioner_dir/cask || errored=true

print_milestone "Installing Emacs packages..."
$provisioner_dir/emacs || errored=true

print_milestone "Installing helper scripts..."
$provisioner_dir/scripts || errored=true

print_milestone "Setting up Python development environment..."
$provisioner_dir/python || errored=true

print_milestone "Setting up RVM..."
$provisioner_dir/rvm || errored=true

print_milestone "Setting up cron schedule..."
$provisioner_dir/cron || errored=true

print_milestone "Final touches (miscellaneous)..."
$provisioner_dir/misc || errored=true

print_milestone "Restoring /etc/sudoers..."
print_command "sudo mv -f /etc/sudoers.bak /etc/sudoers"
sudo mv -f /etc/sudoers.bak /etc/sudoers || { print_error "Failed to restore /etc/sudoers from /etc/sudoers.bak"; errored=true; }

print_note "Provision success.
Please reload your shell."

[[ $errored == false ]]
