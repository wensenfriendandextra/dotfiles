#!/usr/bin/env zsh

# This script sets up basic Python dependencies and dev environment.
#
# This script assumes python2, python3, pip2 and pip3 that are accessible
# without sudo.
#
# Usage:
#     $HOME/.config/provision.d/python [--pyenv [...]]
#
# If the option --pyenv is specified, set up the Python environment with pyenv
# first (assumes pyenv on $PATH). When --pyenv is specified and there are more
# arguments passed on the command line, then the rest of the arguments will be
# treated as Python versions understood by pyenv, and passed to `pyenv shell`.

here=${0:A:h}
source $here/messaging_helpers

errored=false

# deal with pyenv
if [[ $1 == "--pyenv" ]]; then
    shift
    if (( $+commands[pyenv] )); then
        print_progress "Initializing pyenv..."
        eval "$(pyenv init -)" || { print_error "pyenv failed to init"; return 1; }
        # remaining arguments -- if any -- treated as Python versions
        if (( $# )); then
            print_command "pyenv shell $@"
            pyenv shell $@ || { print_error "pyenv failed to set Python versions"; return 1; }
        fi
    else
        print_error "pyenv not found"
        return 1
    fi
fi

# pip
print_milestone "Installing pip dependencies..."

print_command "pip2 install --upgrade pip"
pip2 install --upgrade pip || errored=true

pip2_requirements=$here/../pip/pip2
print_command "pip2 install --requirement '$pip2_requirements'"
pip2 install --requirement $pip2_requirements

print_command "pip3 install --upgrade pip"
pip3 install --upgrade pip || errored=true

pip3_requirements=$here/../pip/pip3
print_command "pip3 install --requirement '$pip3_requirements'"
pip3 install --requirement $pip3_requirements

# install repositories
print_milestone "Installing personal repositories..."

pydevdir=$HOME/dev/src/py
if [[ ! -d $pydevdir ]]; then
    print_command "mkdir -p $pydevdir"
    mkdir -p $pydevdir
fi

typeset -A repos
set -A repos \
    imgur git@github.com:zmwangx/imgur.git \
    onedrive git@github.com:zmwangx/pyonedrive.git \
    pyzmwangx git@github.com:zmwangx/pyzmwangx.git \
    storyboard git@github.com:zmwangx/storyboard.git
for repo in ${(k)repos}; do
    repo_path=$pydevdir/$repo
    if [[ -d $repo_path ]]; then
        print_progress "Repository '$repo' already exists"
    else
        url=$repos[$repo]
        print_command "git clone --recursive '$url' '$repo_path'"
        git clone --recursive $url $repo_path || {
            print_error "Failed to clone repository '$url' into '$repo_path'"
            errored=true
            continue
        }
    fi
    print_command "cd '$repo_path' && ./setup.py develop"
    cd $repo_path && ./setup.py develop || errored=true
done
